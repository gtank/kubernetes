{
  "swaggerVersion": "1.2",
  "apiVersion": "certificates/v1beta1",
  "basePath": "https://10.10.10.10:443",
  "resourcePath": "/apis/certificates/v1beta1",
  "apis": [
   {
    "path": "/apis/certificates/v1beta1/namespaces/{namespace}/certificatesigningrequests",
    "description": "API at /apis/certificates/v1beta1",
    "operations": [
     {
      "type": "v1beta1.CertificateSigningRequestList",
      "method": "GET",
      "summary": "list or watch objects of kind CertificateSigningRequest",
      "nickname": "listNamespacedCertificateSigningRequest",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "integer",
        "paramType": "query",
        "name": "timeoutSeconds",
        "description": "Timeout for the list/watch call.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.CertificateSigningRequestList"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.CertificateSigningRequest",
      "method": "POST",
      "summary": "create a CertificateSigningRequest",
      "nickname": "createNamespacedCertificateSigningRequest",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.CertificateSigningRequest",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.CertificateSigningRequest"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "unversioned.Status",
      "method": "DELETE",
      "summary": "delete collection of CertificateSigningRequest",
      "nickname": "deletecollectionNamespacedCertificateSigningRequest",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "integer",
        "paramType": "query",
        "name": "timeoutSeconds",
        "description": "Timeout for the list/watch call.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "unversioned.Status"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/certificates/v1beta1/watch/namespaces/{namespace}/certificatesigningrequests",
    "description": "API at /apis/certificates/v1beta1",
    "operations": [
     {
      "type": "*versioned.Event",
      "method": "GET",
      "summary": "watch individual changes to a list of CertificateSigningRequest",
      "nickname": "watchNamespacedCertificateSigningRequestList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "integer",
        "paramType": "query",
        "name": "timeoutSeconds",
        "description": "Timeout for the list/watch call.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "*versioned.Event"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/certificates/v1beta1/namespaces/{namespace}/certificatesigningrequests/{name}",
    "description": "API at /apis/certificates/v1beta1",
    "operations": [
     {
      "type": "v1beta1.CertificateSigningRequest",
      "method": "GET",
      "summary": "read the specified CertificateSigningRequest",
      "nickname": "readNamespacedCertificateSigningRequest",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "export",
        "description": "Should this value be exported.  Export strips fields that a user can not specify.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "exact",
        "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the CertificateSigningRequest",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.CertificateSigningRequest"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.CertificateSigningRequest",
      "method": "PUT",
      "summary": "replace the specified CertificateSigningRequest",
      "nickname": "replaceNamespacedCertificateSigningRequest",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.CertificateSigningRequest",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the CertificateSigningRequest",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.CertificateSigningRequest"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1beta1.CertificateSigningRequest",
      "method": "PATCH",
      "summary": "partially update the specified CertificateSigningRequest",
      "nickname": "patchNamespacedCertificateSigningRequest",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "unversioned.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the CertificateSigningRequest",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.CertificateSigningRequest"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "unversioned.Status",
      "method": "DELETE",
      "summary": "delete a CertificateSigningRequest",
      "nickname": "deleteNamespacedCertificateSigningRequest",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the CertificateSigningRequest",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "unversioned.Status"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/certificates/v1beta1/watch/namespaces/{namespace}/certificatesigningrequests/{name}",
    "description": "API at /apis/certificates/v1beta1",
    "operations": [
     {
      "type": "*versioned.Event",
      "method": "GET",
      "summary": "watch changes to an object of kind CertificateSigningRequest",
      "nickname": "watchNamespacedCertificateSigningRequest",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "integer",
        "paramType": "query",
        "name": "timeoutSeconds",
        "description": "Timeout for the list/watch call.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the CertificateSigningRequest",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "*versioned.Event"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/certificates/v1beta1/certificatesigningrequests",
    "description": "API at /apis/certificates/v1beta1",
    "operations": [
     {
      "type": "v1beta1.CertificateSigningRequestList",
      "method": "GET",
      "summary": "list or watch objects of kind CertificateSigningRequest",
      "nickname": "listNamespacedCertificateSigningRequest",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "integer",
        "paramType": "query",
        "name": "timeoutSeconds",
        "description": "Timeout for the list/watch call.",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.CertificateSigningRequestList"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/certificates/v1beta1/watch/certificatesigningrequests",
    "description": "API at /apis/certificates/v1beta1",
    "operations": [
     {
      "type": "*versioned.Event",
      "method": "GET",
      "summary": "watch individual changes to a list of CertificateSigningRequest",
      "nickname": "watchNamespacedCertificateSigningRequestList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "integer",
        "paramType": "query",
        "name": "timeoutSeconds",
        "description": "Timeout for the list/watch call.",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "*versioned.Event"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/certificates/v1beta1/namespaces/{namespace}/certificatesigningrequests/{name}/approve",
    "description": "API at /apis/certificates/v1beta1",
    "operations": [
     {
      "type": "v1beta1.CertificateSigningRequest",
      "method": "PUT",
      "summary": "replace approve of the specified CertificateSigningRequest",
      "nickname": "replaceNamespacedCertificateSigningRequestApprove",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.CertificateSigningRequest",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the CertificateSigningRequest",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.CertificateSigningRequest"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/certificates/v1beta1/namespaces/{namespace}/certificatesigningrequests/{name}/status",
    "description": "API at /apis/certificates/v1beta1",
    "operations": [
     {
      "type": "v1beta1.CertificateSigningRequest",
      "method": "PUT",
      "summary": "replace status of the specified CertificateSigningRequest",
      "nickname": "replaceNamespacedCertificateSigningRequestStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1beta1.CertificateSigningRequest",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the CertificateSigningRequest",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1beta1.CertificateSigningRequest"
       }
      ],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/apis/certificates/v1beta1",
    "description": "API at /apis/certificates/v1beta1",
    "operations": [
     {
      "type": "unversioned.APIResourceList",
      "method": "GET",
      "summary": "get available resources",
      "nickname": "getAPIResources",
      "parameters": [],
      "produces": [
       "application/json",
       "application/yaml"
      ],
      "consumes": [
       "application/json",
       "application/yaml"
      ]
     }
    ]
   }
  ],
  "models": {
   "v1beta1.CertificateSigningRequestList": {
    "id": "v1beta1.CertificateSigningRequestList",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "unversioned.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1beta1.CertificateSigningRequest"
      }
     }
    }
   },
   "unversioned.ListMeta": {
    "id": "unversioned.ListMeta",
    "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
    "properties": {
     "selfLink": {
      "type": "string",
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only."
     },
     "resourceVersion": {
      "type": "string",
      "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
     }
    }
   },
   "v1beta1.CertificateSigningRequest": {
    "id": "v1beta1.CertificateSigningRequest",
    "description": "Describes a certificate signing request",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "api.ObjectMeta"
     },
     "spec": {
      "$ref": "v1beta1.CertificateSigningRequestSpec",
      "description": "The certificate request itself and any additonal information."
     },
     "status": {
      "$ref": "v1beta1.CertificateSigningRequestStatus",
      "description": "Derived information about the request."
     },
     "approve": {
      "$ref": "v1beta1.CertificateSigningRequestApproval",
      "description": "The current approval state of the request."
     }
    }
   },
   "api.ObjectMeta": {
    "id": "api.ObjectMeta",
    "properties": {
     "name": {
      "type": "string"
     },
     "generateName": {
      "type": "string"
     },
     "namespace": {
      "type": "string"
     },
     "selfLink": {
      "type": "string"
     },
     "uid": {
      "type": "string"
     },
     "resourceVersion": {
      "type": "string"
     },
     "generation": {
      "type": "integer",
      "format": "int64"
     },
     "creationTimestamp": {
      "type": "string"
     },
     "deletionTimestamp": {
      "type": "string"
     },
     "deletionGracePeriodSeconds": {
      "type": "integer",
      "format": "int64"
     },
     "labels": {
      "type": "any"
     },
     "annotations": {
      "type": "any"
     }
    }
   },
   "v1beta1.CertificateSigningRequestSpec": {
    "id": "v1beta1.CertificateSigningRequestSpec",
    "description": "This information is immutable after the request is created.",
    "required": [
     "request"
    ],
    "properties": {
     "request": {
      "type": "string",
      "description": "Base64-encoded PKCS#10 CSR data"
     },
     "extra": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "Any extra information the node wishes to send with the request."
     }
    }
   },
   "v1beta1.CertificateSigningRequestStatus": {
    "id": "v1beta1.CertificateSigningRequestStatus",
    "description": "This information is derived from the request by Kubernetes and cannot be modified by users. All information is optional since it might not be available in the underlying request. This is intented to aid approval decisions.",
    "properties": {
     "username": {
      "type": "string",
      "description": "Information about the requesting user (if relevant) See user.Info interface for details"
     },
     "uid": {
      "type": "string"
     },
     "groups": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "fingerprint": {
      "type": "string",
      "description": "Fingerprint of the public key in request"
     },
     "subject": {
      "$ref": "pkix.Name",
      "description": "Subject fields from the request"
     },
     "dns": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "DNS SANs from the request"
     },
     "ip": {
      "type": "array",
      "items": {
       "type": "string"
      },
      "description": "IP SANs from the request"
     }
    }
   },
   "pkix.Name": {
    "id": "pkix.Name",
    "required": [
     "Country",
     "Organization",
     "OrganizationalUnit",
     "Locality",
     "Province",
     "StreetAddress",
     "PostalCode",
     "SerialNumber",
     "CommonName",
     "Names",
     "ExtraNames"
    ],
    "properties": {
     "Country": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "Organization": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "OrganizationalUnit": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "Locality": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "Province": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "StreetAddress": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "PostalCode": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "SerialNumber": {
      "type": "string"
     },
     "CommonName": {
      "type": "string"
     },
     "Names": {
      "type": "array",
      "items": {
       "$ref": "pkix.AttributeTypeAndValue"
      }
     },
     "ExtraNames": {
      "type": "array",
      "items": {
       "$ref": "pkix.AttributeTypeAndValue"
      }
     }
    }
   },
   "pkix.AttributeTypeAndValue": {
    "id": "pkix.AttributeTypeAndValue",
    "required": [
     "Type",
     "Value"
    ],
    "properties": {
     "Type": {
      "type": "array",
      "items": {
       "$ref": "integer"
      }
     },
     "Value": {
      "$ref": "pkix.AttributeTypeAndValue.Value"
     }
    }
   },
   "integer": {
    "id": "integer",
    "properties": {}
   },
   "pkix.AttributeTypeAndValue.Value": {
    "id": "pkix.AttributeTypeAndValue.Value",
    "properties": {}
   },
   "v1beta1.CertificateSigningRequestApproval": {
    "id": "v1beta1.CertificateSigningRequestApproval",
    "required": [
     "state"
    ],
    "properties": {
     "state": {
      "type": "string",
      "description": "CSR approval state, one of Submitted, Approved, or Denied"
     },
     "reason": {
      "type": "string",
      "description": "brief reason for the request state"
     },
     "message": {
      "type": "string",
      "description": "human readable message with details about the request state"
     },
     "certificate": {
      "type": "array",
      "items": {
       "$ref": "integer"
      },
      "description": "If request was approved, the controller will place the issued certificate here."
     }
    }
   },
   "unversioned.Status": {
    "id": "unversioned.Status",
    "description": "Status is a return value for calls that don't return other objects.",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
     },
     "metadata": {
      "$ref": "unversioned.ListMeta",
      "description": "Standard list metadata. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
     },
     "status": {
      "type": "string",
      "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#spec-and-status"
     },
     "message": {
      "type": "string",
      "description": "A human-readable description of the status of this operation."
     },
     "reason": {
      "type": "string",
      "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it."
     },
     "details": {
      "$ref": "unversioned.StatusDetails",
      "description": "Extended data associated with the reason.  Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type."
     },
     "code": {
      "type": "integer",
      "format": "int32",
      "description": "Suggested HTTP return code for this status, 0 if not set."
     }
    }
   },
   "unversioned.StatusDetails": {
    "id": "unversioned.StatusDetails",
    "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
    "properties": {
     "name": {
      "type": "string",
      "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described)."
     },
     "group": {
      "type": "string",
      "description": "The group attribute of the resource associated with the status StatusReason."
     },
     "kind": {
      "type": "string",
      "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
     },
     "causes": {
      "type": "array",
      "items": {
       "$ref": "unversioned.StatusCause"
      },
      "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes."
     },
     "retryAfterSeconds": {
      "type": "integer",
      "format": "int32",
      "description": "If specified, the time in seconds before the operation should be retried."
     }
    }
   },
   "unversioned.StatusCause": {
    "id": "unversioned.StatusCause",
    "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
    "properties": {
     "reason": {
      "type": "string",
      "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available."
     },
     "message": {
      "type": "string",
      "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader."
     },
     "field": {
      "type": "string",
      "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\""
     }
    }
   },
   "*versioned.Event": {
    "id": "*versioned.Event",
    "properties": {}
   },
   "unversioned.Patch": {
    "id": "unversioned.Patch",
    "description": "Patch is provided to give a concrete name and type to the Kubernetes PATCH request body.",
    "properties": {}
   },
   "v1.DeleteOptions": {
    "id": "v1.DeleteOptions",
    "description": "DeleteOptions may be provided when deleting an API object",
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
     },
     "gracePeriodSeconds": {
      "type": "integer",
      "format": "int64",
      "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
     },
     "preconditions": {
      "$ref": "v1.Preconditions",
      "description": "Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status will be returned."
     }
    }
   },
   "v1.Preconditions": {
    "id": "v1.Preconditions",
    "description": "Preconditions must be fulfilled before an operation (update, delete, etc.) is carried out.",
    "properties": {
     "uid": {
      "$ref": "types.UID",
      "description": "Specifies the target UID."
     }
    }
   },
   "types.UID": {
    "id": "types.UID",
    "properties": {}
   },
   "unversioned.APIResourceList": {
    "id": "unversioned.APIResourceList",
    "description": "APIResourceList is a list of APIResource, it is used to expose the name of the resources supported in a specific group and version, and if the resource is namespaced.",
    "required": [
     "groupVersion",
     "resources"
    ],
    "properties": {
     "kind": {
      "type": "string",
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
     },
     "apiVersion": {
      "type": "string",
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#resources"
     },
     "groupVersion": {
      "type": "string",
      "description": "groupVersion is the group and version this APIResourceList is for."
     },
     "resources": {
      "type": "array",
      "items": {
       "$ref": "unversioned.APIResource"
      },
      "description": "resources contains the name of the resources and if they are namespaced."
     }
    }
   },
   "unversioned.APIResource": {
    "id": "unversioned.APIResource",
    "description": "APIResource specifies the name of a resource and whether it is namespaced.",
    "required": [
     "name",
     "namespaced",
     "kind"
    ],
    "properties": {
     "name": {
      "type": "string",
      "description": "name is the name of the resource."
     },
     "namespaced": {
      "type": "boolean",
      "description": "namespaced indicates if a resource is namespaced or not."
     },
     "kind": {
      "type": "string",
      "description": "kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')"
     }
    }
   }
  }
 }